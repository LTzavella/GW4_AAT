"0","```r

#ITIs will be checked for go-test blocks (pre and post) as well as training blocks
#In case of NA values, data will be checked further according to the proportions of NAs in specific design cells:

#SE:    Selected condition, early signal-onset distance [training]
#SM:    Selected condition, mid signal-onset distance [training]
#NE:    Non-selected condition, early signal-onset distance [training]
#NM:    Non-selected condition, mid signal-onset distance [training]
#SH1:   Selected condition, healthy category, pre-training [go test]
#SU1:   Selected condition, unhealthy category, pre-training [go test]
#NH1:   Non-selected condition, healthy category, pre-training [go test]
#NU1:   Non-selected condition, unhealthy category, pre-training [go test]
#SH2:   Selected condition, healthy category, post-training [go test]
#SU2:   Selected condition, unhealthy category, post-training [go test]
#NH2:   Non-selected condition, healthy category, post-training [go test]
#NU2:   Non-selected condition, unhealthy category, post-training [go test]

#iti_checks1 <- ldply(group1, function(x) {cbind(table(x$iti_check[x$values.frame_signal==112 & x$blockcode==\"go_training\"]), 
                                          #table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test\"]), 
                                          #table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test_end\"]),
                                          #table(x$iti_check[x$values.frame_go==4 & x$blockcode==\"tastiness\" & x$values.trialnumber>4]),
                                          #table(x$iti_check[x$values.frame_go==4 & x$blockcode==\"desiretoeat\" & x$values.trialnumber>4]))})

#iti_checks1 <- iti_checks1[seq(3, nrow(iti_checks1), 3), ]

#iti_checks2 <- ldply(group2, function(x) {cbind(table(x$iti_check[x$values.frame_signal==112 & x$blockcode==\"stop_training\"]), 
                                          #table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test\"]), 
                                          #table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test_end\"]),
                                          #table(x$iti_check[x$values.frame_go==4 & x$blockcode==\"tastiness\" & x$values.trialnumber>4]),
                                          #table(x$iti_check[x$values.frame_go==4 & x$blockcode==\"desiretoeat\" & x$values.trialnumber>4]))})


#iti_checks3 <- ldply(group3, function(x) {cbind(table(x$iti_check[x$values.frame_signal==112 & x$blockcode==\"change_training\"]), 
                                          #table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test\"]), 
                                          #table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test_end\"]),
                                          #table(x$iti_check[x$values.frame_go==4 & x$blockcode==\"tastiness\" & x$values.trialnumber>4]),
                                          #table(x$iti_check[x$values.frame_go==4 & x$blockcode==\"desiretoeat\" & x$values.trialnumber>4]))})

#iti_checks <- ldply(group1, function(x) table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_training\"])) 
#iti_checks <- ldply(group1, function(x) table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test\"])) 
#iti_checks <- ldply(group1, function(x) table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test_end\"])) 


#iti_checks <- ldply(group2, function(x) table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"stop_training\"])) 
#iti_checks <- ldply(group2, function(x) table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test\"])) 
#iti_checks <- ldply(group2, function(x) table(x$iti_check[x$values.frame_go==112 & x$blockcode==\"go_test_end\"])) 

#findFirst <- function(data, jpg, position) {
#  x <- which(data == jpg)
#  if (position == 1) out <- x[1]
#  else out <- x[which(diff(x) != 1)[position-1] + 1]
#  out
#}

#invec is the input vector.
#value is the value you're looking for.
#event is the position (for example, first, second, third sequence).
#Usage would be:


#findFirst(ex, \"242\", 2) 


#hchecks<- ldply(group3, function(x) {table(x$values.eval_healthiness[x$values.frame_go==4 & x$blockcode==\"desiretoeat\" & x$values.trialnumber>4])})

#hre <- subset(hchecks, hchecks$`1`==16 | hchecks$`2`==16)
```"
