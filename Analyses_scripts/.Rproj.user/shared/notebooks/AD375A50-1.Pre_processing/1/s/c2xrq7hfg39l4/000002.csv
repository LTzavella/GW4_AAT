"0","# Select training (GNG) trials that include accuraacy and RT outcomes"
"0",""
"0","gng <- lapply(data, subset, blockcode == ""gng"" & trialcode != ""break"" & trialcode != ""clear_screen"")"
"0",""
"0","# Create subset of correct responses only for RT outcomes"
"0",""
"0","gng_rt <- lapply(gng, subset, values.gng_correct == 1)"
"0",""
"0","# Recode accuracy values into 0s and 1s"
"0","# Coding is reversed to get the proportion of error rates (PE); i.e., 1=incorrect; 0=correct"
"0",""
"0","gng_pe <- lapply(gng, transform, accuracy = as.integer(ifelse(values.gng_correct == 1, ""0"", ""1"")))"
"0",""
"0","# Apply functions and get dataframes with RT and PE outcomes"
"0",""
"0","gng_RTs <- ldply(gng_rt, fun_gng_RTs)"
"0","gng_PEs <- ldply(gng_pe, fun_gng_PEs)"
"0",""
"0","# Change proportion of error rates (PE) into proportion of correct responses (PC) and bind outcomes together into one dataframe"
"0",""
"0","gng_PEs$FillerGo.PC <- 1 - gng_PEs$FillerGo.PE"
"0","gng_PEs$FillerNoGo.PC <- 1 - gng_PEs$FillerNoGo.PE"
"0","gng_PEs$Go.PC <- 1 - gng_PEs$Go.PE"
"0","gng_PEs$NoGo.PC <- 1 - gng_PEs$NoGo.PE"
"0",""
"0","GNG_sum <- cbind(gng_RTs, gng_PEs[2:9])"
